 
데이터 분석을 위해 다양한 소스로부터 수집되는 데이터는 그 형태나 속성이 매우 다양.
이러한 서로 다른 형태와 속성을 가진 여러 종류의 데이터를 컴퓨터를 통해 분석하기 위해서는 일관성 있게 동일한 형태로 통합할 필요가 있음
판다스 
= 이러한 역할을 수행하는 도구 중에 하나
=  빅데이터 분석과 처리에 현재 널리 사용되고 있는 Python 라이브러리
Pandas의 기본 목적 = 서로 다른 유형의 데이터를 공통의 형식으로 정리하는 것입니다.
그래서 판다스는 핵심 데이터 구조로서 1차원 배열 형태를 가진 Series와 2차원 배열 형태를 가진 DataFrame을 제공하며, 이를 통해 빅데이터 분석에 필요한 고수준의 연산 수행을 가능하도록 지원하고 있음
[ pandas의 사용 방법] 
판다스를 사용하기 위해서는 colab에서 Pandas를 임포트 해야 함
그리고 현재 사용하고 있는 판다스 버전을 확인할 수도 있음
 
화면에서와 같이 version 단어의 앞뒤로 언더바 2개씩 붙이고 실행을 하면 판다스의 버전 정보를 확인할 수 있음
 
결과의 화면에서 볼 수 있듯이 0.25.3이라는 숫자를 확인할 수 있음
이 숫자는 판다스 버전 0.25.3을 의미

인터넷을 통해 버전 정보를 검색해 보면, 2019년 10월 31일자 버전으로 확인이 됩니다.

2주차에서 numpy를 np라는 별칭으로 임포트한 것처럼 Pandas도 pd라는 별칭으로 임포트
.  
그리고 pandas를 사용하기 위해서는 numpy와 판다스 모두를 임포트해야 합니다.

앞으로 살펴볼 예제와 실습에서는 화면과 같이 기본적으로 넘파이와 판다스가 임포트되어 있다고 가정하고 사용할거임
	앞서 언급하였듯이 Pandas의 기본 데이터 구조는 Series와 DataFrame입니다.
 
	화면의 왼쪽 그림은 판다스의 시리즈에 대한 전반적인 구조를 보여줍니다.
시리즈는 데이터가 순차적으로 나열된 1차원 배열의 형태를 갖고 있음
시리즈에서 인덱스는 데이터 값과 일대일로 대응이 됩니다.
인덱스와 데이터값과의 일대일 대응 관계는 파이썬 딕셔너리에서 키와 값의 관계와 유사해 보입니다.
뒤에서 설명하겠지만, 파이썬 딕셔너리를 통해 판다스의 시리즈를 만들 수 있으며, 게다가 이것이 보편적으로 사용되고 있습니다.
화면의 그림에서 인덱스는 데이터값의 위치를 나타내는 주소의 역할을 합니다.
예) 이 그림에서 Index 1은 Data 1을 가리키는 주소
그래서 우리가 index 1을 알고 있으면, index 1을 통하여 data 1에 접근할 수 있음
 
[데이터프레임의 구조]
 
데이터프레임은 이 그림에서 볼 수 있듯이 2차원 배열 구조를 갖고 있습니다.
행과 열로 구성되는 2차원 배열 
= 마이크로소프트 엑셀이나 관계형 데이터베이스 등 다양한 응용에서 활용되는 데이터구조
판다스의 데이터프레임은 바로 이러한 2차원 배열 구조를 다루기 위한 데이터 구조
그림처럼 여러 개의 시리즈가 모여 구성된 구조 = 데이터프레임
데이터프레임에서 각 열이 시리즈를 나타냄
